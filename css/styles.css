/*
    ¿Como escribir codigo CSS?
    Existen diferentes formas de escribir codigo CSS:
        *BEM(Bloques, Elementos y Modificadores)
        *Unity First
        *Modulo
    Si el proyecto tiende a ser grande es buena idea usar caulquiera
    de los tres

    ¿Que es "Responsve Web Desing"?
    Es un enfoque que nos dice que nuestros diseños deberan adaptarse
    a las interacciones del usuiario y la resolucion que utilizan. Para
    esto usaremos la tegnologia de "Media Queries"
    Sintaxis:
        @media(CONDICION){
        }
    Para agilizar la cracion de @media es necesario seguir los pasos siguientes:
        *pulsar [ctrl] + [shift] + [p]
        *escribir [>user Snippets] y pulsar [Enter]
        *buscar [css] y abrir el documento .json
        *escribir en la parte inferior lo siguiente:
            "Crea un Media Querie":{
		        "prefix": "mq",
		        "body": "@media (min-width: $1) {\n    $2\n}"
	        }
        *Para usar solo necesitamos escrir [mq] + [enter]
    Taños recomendsados para:
            *Celular -> 480px
            *Tableta -> 768px
            *Monitor pc -> 1140px
            *Pantalla -> 1400px

    Flexbox y Grid
    Utiliza Flexbox:
        Para la alineacion o distribucion de los elementos que estaran dentro de 
        contenedores
        Ejemplo:
            Una barra de navegacion como la del proyecto 
    Utiliza Css Grid:
        Para definir el Layout de tu sitio web, como pueden ser las columnas o
        contenedores de elementos
        Ejemplo:
            Un diseño que tengas que distribuir en diferentes areas
        
*/
@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@1,100;1,500&display=swap');

/*La etiqueta ":root" se conocen como pseudo-selectores, se encargan de 
guardar variables llamadas custom properties, pero realmente estas 
variables no son parte del codigo css*/
:root{
    --blanco: #ffffff;
    --oscuro: #212121;
    --pimario: #ffc107;
    --secundario: #0097a7;
    --gris: #757575;
    --Azul: #38b6ff;
    --GrisClaro: #dfe9f3;
}

/*Usamos las etiquetas de "html" y "body" para poder usar de forma facil
y sencilla a "rem"*/
html{
    font-size: 62.5%;
    box-sizing: border-box;
    /*Nos sirve para hacer uso de la barra de scroll mas eficiente*/
    scroll-snap-type: y mandatory; 
}

/*Scroll
  Con este codigo poniendo las clases adecuadas logramos el efecto*/
.servisios,
.Nav_Principal,
.formulario{
    scroll-snap-align: center;
    scroll-snap-stop: always;
}

/*Soluciona algunos problemas de las cajas "box-sizing: border-box;" y*/
*, *:before, *:after {
    box-sizing: inherit;
}

body{
    font-size: 16px;
    font-family: 'Roboto Mono', monospace;
    /*Esta propiedad se utiliza para poder usar el degradado, en este caso es 
      de abajo para arriba*/
    background-image: linear-gradient(to top, var(--GrisClaro) 0%, var(--blanco) 100%);
}
/*Al hacer los cambios nos queda:
    *1rem = 10px 
Los rems se adaptan mejor a distintas pantallas*/
/*--------------------------------------------------------------------*/

h1{
    font-size: 3.8rem;
    color:var(--gris);    /*Asi usamos las "custom properties"*/
}
h2{
    font-size: 2.8rem;
}
h3{
    font-size: 1.8rem;
}

h1, h2, h3{
    text-align: center;
}

/*Usamos una herramienta llamada "CSSmatic" para poder crear "Box shadow", ademas
  tiene la capacidad par crear Noise Texture, Border Radius y Gradient Generator
  esto de manera facil y rapida*/
.CajaSombra{
    -webkit-box-shadow: 0px 10px 20px 7px rgba(83,83,128,0.56);
    -moz-box-shadow: 0px 10px 20px 7px rgba(83,83,128,0.56);
    box-shadow: 0px 10px 20px 7px rgba(83,83,128,0.56);
    background-color: var(--blanco);
    padding: 2rem;
    border-radius: 2rem;
}

/*Los "span" funcionan como bloques independientes, dentro de otros*/
.titulo span{
    font-size: 2rem;
}

/*Utilidades*/
.-w-sm-100{
    width: 100%;
}

@media (min-width: 768px) {
    .-w-sm-100{
        width: auto;
    }
}

.flex{
    display: flex;
}

.alinear-derecha{
    justify-content: flex-end;
    margin-top: 4rem;
}

.nav-bg{
    background-color: var(--secundario);
}

.contenedor{
    max-width: 120rem;
    /*
    margin-top: 0rem;
    margin-right: auto;
    margin-bottom: 0rem;
    margin-left: auto;
    -------------------------------------------------------------------
    Podemos usar simplemente el ejemplo siguiente para ser mas facil y
    comodo ajustar algo

    margin: 0 auto 0 auto;  tambien podemos omitir las ultimas dos si son 
                            iguales a las dos primeras
    -------------------------------------------------------------------
    */
    margin: 0 auto;
}
/*Creamos el boton para su uso general*/
.boton{
    background-color: var(--secundario);
    color: var(--blanco);
    padding: 1rem 3rem;
    margin-top: 1rem;
    font-size: 2rem;
    text-decoration: none;
    text-transform: uppercase;
    font-weight: bold;
    border-radius: .5rem;
    width: 90%;
    text-align: center;
    border: none;
}

@media (min-width: 768px) {
    .boton{
        width: auto;
    }
}

.boton:hover{
    cursor: pointer;
}

.nav-bg{
    background-color: var(--secundario);
}
/*Los flexbox
    Los flexbos siempre se posicionan en la etiqueta padre del elemento que querramos
    alinear, en este caso buscamos alinear las etiquetas "a", por lo que nos vamos 
    con la etique padre, en este caso "Nav_Principal", tambien podemos cambiar de 
    horizontal a vertical*/
.Nav_Principal{
    display: flex;      /*Habilita los flexbox*/
    flex-direction: column;
}

/*Usando los Media Queries*/
@media (min-width: 760px) {
    .Nav_Principal{
        flex-direction: row;
        justify-content: space-between;      /*Caracteristica de flexbox*/
    }
}

/*La caracteristica "fonts" se utiliza para poder modificar el diseño de 
  la fuente, como el grosor o el tamaño y la caracteristica de "text" es 
  para modificar la fuente */
.Nav_Principal a{
    display: block;
    text-align: center;
    color: var(--blanco);
    text-decoration: none;
    font-size: 2rem;
    font-weight: bold;
    padding: 1rem;
}

/*Creamos una pseudoclase*/
.Nav_Principal a:hover{
    background-color: var(--gris);
    color: var(--blanco);
}

/*Las clases de .hero y .contenerdo-hero se usan para poder modificar las
  imagenes y sus caracteristicas*/
.hero{
    background-image: url(../img/hero.jpg);
    background-repeat: no-repeat;
    background-size: cover;
    height: 45rem;
    position: relative;
    margin-bottom: 2rem;
}

.contenerdo-hero{
    position: absolute;
    background-color: rgba(0, 0, 0, .7);
    width: 100%;
    height: 100%;

    /*Modificador para el texto y elementos
      Este codigo se utiliza para alinear tanto vertical como horizontal, sin 
      importar el codigo o el proyecto*/
    display: flex;
    /*Prestar atencion si necesitan los elementos en columnas o renglones*/
    flex-direction: column;     
    align-items: center;
    justify-content: center;
}

.contenerdo-hero h2, .contenerdo-hero p{
    color:var(--blanco)
}

/*Modificacion de los la parte principal de la pagina*/
@media (min-width: 768px) {
    .servisios{
        display: grid;    /*Añade las propiedades de "css Grid"*/
        /*1fr Indica que tomara 1 fraccion del total
          repeat(Cuantas veces repetira, cantidad[1rf])*/
        grid-template-columns: repeat(3, 1fr);
        column-gap: 1rem;
    }
}

.Servisio{
    display: flex;
    flex-direction: column;
    align-items: center;
}

.Servisio h3{
    color: var(--gris);
    font-weight: normal;
}

.Servisio p{
    line-height: 2;
    text-align: center;
}

.Servisio .iconos{
    height: 15rem;
    width: 15rem;
    background-color: var(--Azul);
    border-radius: 50%;

    /*Modificador para el texto y elementos
      Este codigo se utiliza para alinear tanto vertical como horizontal, sin 
      importar el codigo o el proyecto*/
    display: flex;
    align-items: center;
    justify-content: space-evenly;
}

/*---------------------Formulario---------------------*/

.formulario{
    background-color: var(--gris);
    width: min(60rem, 100%); /*Utiliza el valor mas pequeño que la paguina tenga*/
    margin: 0 auto; /*Se usa cuando el padre no sea display:flex o cuando sea un bloque*/
    padding: 2rem;
    border-radius: 2rem;
}

.formulario fieldset{
    border: none;
}

.formulario legend{
    text-align: center;
    font-size: 1.8rem;
    text-transform: uppercase;
    font-weight: 400;
    margin-bottom: 2rem;
    color: var(--blanco);
}

@media (min-width: 768px) {
    .contenerdor_campos{
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-template-rows: auto auto 20rem;
        column-gap: 1rem;
    }
    /*Con el seudoselector "nth-child()" podemos seleccionar por orden alguna
      clase que compartan el mismo nombre*/
    .campos:nth-child(3),
    .campos:nth-child(4){ 
        /*Lo que hace es decirle al navegador que en la clase campo seleccione
        la tercera y avarque de el espacio 1 al 3 en columnas*/   
        grid-column: 1/3;
    }
}

.campos{
    margin-bottom: 1rem;
}

.campos label{
    color: var(--blanco);
    font-weight: 350;
    margin-bottom: .5rem;
    display: block;
}

.campos textarea{ /*Modificamos el area el texto*/
    height: 20rem;
}

.imput-text{
    width: 100%;
    border: none;
    padding: 1.5rem;
    border-radius: .5rem;
}

/*Footer*/
.footer{
    text-align: center;
}